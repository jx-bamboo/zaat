<nav class="navbar navbar-expand-lg bg-body-dark py-4">
  <div class="container">
    <a class="navbar-brand" href="<%= root_path %>" data-turbo-prefetch="false"><%= image_tag "logo.svg" %></a>
    <!-- <button class="navbar-toggler text-light" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon text-light"></span>
    </button> -->
    <!-- <div class="collapse navbar-collapse" id="navbarTogglerDemo02"> -->
      <ul class="navbar-nav ms-2 ms-sm-4 me-auto">
        <li class="nav-item">
          <a class="text-decoration-none fs0875 gradient-text" aria-current="page" href="#">Docs</a>
        </li>
      </ul>

      <div class="nav navbar">

        <div class="bg_gradient padding1 rounded-pill me-3 cursor-pointer">
          <% if user_signed_in? %>
            <% if current_user.address.present? %>
              <button class="border-0 text-bg-dark rounded-pill p-0">
                <span class="px-1"><%= simple_address current_user.address %></span>
              </button>
            <% else %>
              <button class="eth_connect bg-dark border-0 rounded-pill p-0">
                <%= image_tag "metamask.png", width: 28, class: "p-1 h-menu" %>
              </button>
            <% end %>
          <% else %>
            <button class="eth_connect bg-dark border-0 rounded-pill p-0">
              <%= image_tag "metamask.png", width: 28, class: "p-1 h-menu" %>
            </button>
          <% end %>
        </div>

        <span class="border border-dark py-2 me-3"></span>
        <% if user_signed_in? %>
          <%= render "layouts/signed_button" %>
        <% else %>
          <%= render "layouts/no_signed_button" %>
        <% end %>
      </div>
    <!-- </div> -->
  </div>
</nav>

<script>
  // ...... 登录注册 start ......
  var buttonEthConnect = document.querySelector("button.eth_connect");
  if (typeof window.ethereum !== "undefined") {
    buttonEthConnect.addEventListener("click", async () => {
      console.log("... Click the button ...")
      //buttonEthConnect.disabled = true;
      try {
          const address = await requestAccounts();
          if(address) {
            console.log(" ... a address ... ")
            const login_status = await requestLogin(address);
            const data = await login_status.json();
            console.log(data)

            if(data.data == "reload"){
              location.reload();
              console.log(" reload ")
            } else {
              alert(data.data)
            }
          }
      } catch (error) {
          console.log(error);
      } finally {
        console.log(".. finally ..")
        buttonEthConnect.disabled = false;
      }
    });
  } else {
    buttonEthConnect.disabled = true;
    buttonEthConnect.style.filter = "grayscale(100%)";
  }

  async function requestLogin(address) {
    console.log(" .. into requestLogin ..");
    return fetch("/metamask/eth/" + address);
  }

  async function requestAccounts() {
    const accounts = await ethereum.request({ method: "eth_accounts" });
    return accounts[0];
  }
  // ...... 登录注册 end ......

  // 
  async function requestBalance(address) {
    const balance = await ethereum.request({method: "eth_getBalance", params: [address]});
    return parseInt(balance, 16) / Math.pow(10, 18);
  }

  async function requestChainId() {
    console.log("... 进入chainid ...")
    const chainid = await ethereum.request({method: "eth_chainId"});
    return chainid;
  }
  
  async function checkPolygonNet() {
    const chainid = await requestChainId();
    if (chainid === '0x89' || chainid === '0x13881') {
      console.log('用户已连接到 Polygon 网络，执行下一步操作 ..')
    } else {
      console.log('用户 no Polygon 网络xxxxxxx')
      try {
        console.log("in to try");
        await ethereum.request({
            method: 'wallet_addEthereumChain',
            params: [{
                chainId: '0x89',
                chainName: 'Polygon Mainnet',
                nativeCurrency: {
                  name: "MATIC",
                  symbol: "MATIC",
                  decimals: 18,
                },
                rpcUrls: ['https://rpc-mainnet.maticvigil.com/'],
                blockExplorerUrls: ['https://polygonscan.com/']
            }]
        });

        console.log('Switch to the Polygon network')
        await ethereum.request({ method: "wallet_switchEthereumChain", params: [{ chainId: "0x89" }] });
          // 提示用户已成功添加 Polygon 网络
        console.log('用户已连接到 Polygon 网络 .........................')
      } catch (error) {
        console.error("error: ", error);
          // 处理错误情况
      }
    }
  }
  
</script>